// Vitest Snapshot v1

exports[`#getConfig > it accepts custom initalization options > gives back a custom context such as serverless 1`] = `
{
  "build": false,
  "context": "serverless",
  "debug": {
    "build": false,
    "hooks": false,
    "performance": false,
    "shortcodes": false,
    "stacks": false,
  },
  "distDir": "/Users/nickreese/repos/elderjs/elderjs/t/public",
  "hooks": {
    "disable": [],
  },
  "origin": "",
  "plugins": {},
  "prefix": "",
  "rootDir": "/Users/nickreese/repos/elderjs/elderjs/t",
  "server": false,
  "shortcodes": {
    "closePattern": "}}",
    "openPattern": "{{",
  },
  "srcDir": "/Users/nickreese/repos/elderjs/elderjs/t/src",
  "version": "1.2.3",
  "worker": false,
}
`;

exports[`#getConfig > it accepts custom initalization options > gives back a custom context such as serverless 2`] = `
{
  "clientComponents": "/Users/nickreese/repos/elderjs/elderjs/t/public/_elderjs/svelte",
  "distElder": "/Users/nickreese/repos/elderjs/elderjs/t/public/_elderjs",
  "files": {
    "all": [],
    "client": [],
    "hooks": "",
    "publicCssFile": "",
    "routes": [],
    "server": [],
    "shortcodes": "",
  },
  "findComponent": [Function],
  "logPrefix": "[Elder.js]:",
  "production": false,
  "serverPrefix": "",
  "ssrComponents": "/Users/nickreese/repos/elderjs/elderjs/t/___ELDER___/compiled",
  "status": "bootstrapping",
  "websocket": undefined,
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a prefix with a leading "/" 1`] = `
{
  "build": false,
  "context": "server",
  "debug": {
    "build": false,
    "hooks": false,
    "performance": false,
    "shortcodes": false,
    "stacks": false,
  },
  "distDir": "/Users/nickreese/repos/elderjs/elderjs/t/public",
  "hooks": {
    "disable": [],
  },
  "origin": "",
  "plugins": {},
  "prefix": "/testing",
  "rootDir": "/Users/nickreese/repos/elderjs/elderjs/t",
  "server": {
    "prefix": "/testing",
  },
  "shortcodes": {
    "closePattern": "}}",
    "openPattern": "{{",
  },
  "srcDir": "/Users/nickreese/repos/elderjs/elderjs/t/src",
  "version": "1.2.3",
  "worker": false,
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a prefix with a leading "/" 2`] = `
{
  "clientComponents": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs/svelte",
  "distElder": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs",
  "files": {
    "all": [],
    "client": [],
    "hooks": "",
    "publicCssFile": "",
    "routes": [],
    "server": [],
    "shortcodes": "",
  },
  "findComponent": [Function],
  "logPrefix": "[Elder.js]:",
  "production": false,
  "serverPrefix": "/testing",
  "ssrComponents": "/Users/nickreese/repos/elderjs/elderjs/t/___ELDER___/compiled",
  "status": "bootstrapping",
  "websocket": {
    "send": [Function],
    "wss": {
      "_events": {
        "connection": [Function],
      },
      "_eventsCount": 1,
      "_maxListeners": undefined,
      "_removeListeners": [Function],
      "_server": {
        "_connectionKey": "6::::0",
        "_connections": 0,
        "_events": {
          "connection": [Function],
          "error": [Function],
          "listening": [Function],
          "upgrade": [Function],
        },
        "_eventsCount": 4,
        "_handle": {
          "onconnection": [Function],
          "reading": false,
        },
        "_maxListeners": undefined,
        "_unref": false,
        "_usingWorkers": false,
        "_workers": [],
        "allowHalfOpen": true,
        "headersTimeout": 60000,
        "httpAllowHalfOpen": false,
        "insecureHTTPParser": undefined,
        "keepAliveTimeout": 5000,
        "maxHeaderSize": undefined,
        "maxHeadersCount": null,
        "pauseOnConnect": false,
        "requestTimeout": 0,
        "timeout": 0,
      },
      "_shouldEmitClose": false,
      "_state": 0,
      "clients": Set {},
      "options": {
        "WebSocket": [Function],
        "backlog": null,
        "clientTracking": true,
        "handleProtocols": null,
        "host": null,
        "maxPayload": 104857600,
        "noServer": false,
        "path": null,
        "perMessageDeflate": false,
        "port": null,
        "server": {
          "_connectionKey": "6::::0",
          "_connections": 0,
          "_events": {
            "connection": [Function],
            "error": [Function],
            "listening": [Function],
            "upgrade": [Function],
          },
          "_eventsCount": 4,
          "_handle": {
            "onconnection": [Function],
            "reading": false,
          },
          "_maxListeners": undefined,
          "_unref": false,
          "_usingWorkers": false,
          "_workers": [],
          "allowHalfOpen": true,
          "headersTimeout": 60000,
          "httpAllowHalfOpen": false,
          "insecureHTTPParser": undefined,
          "keepAliveTimeout": 5000,
          "maxHeaderSize": undefined,
          "maxHeadersCount": null,
          "pauseOnConnect": false,
          "requestTimeout": 0,
          "timeout": 0,
        },
        "skipUTF8Validation": false,
        "verifyClient": null,
      },
    },
  },
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a prefix with a leading and trailing "/" 1`] = `
{
  "build": false,
  "context": "server",
  "debug": {
    "build": false,
    "hooks": false,
    "performance": false,
    "shortcodes": false,
    "stacks": false,
  },
  "distDir": "/Users/nickreese/repos/elderjs/elderjs/t/public",
  "hooks": {
    "disable": [],
  },
  "origin": "",
  "plugins": {},
  "prefix": "/testing",
  "rootDir": "/Users/nickreese/repos/elderjs/elderjs/t",
  "server": {
    "prefix": "/testing",
  },
  "shortcodes": {
    "closePattern": "}}",
    "openPattern": "{{",
  },
  "srcDir": "/Users/nickreese/repos/elderjs/elderjs/t/src",
  "version": "1.2.3",
  "worker": false,
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a prefix with a leading and trailing "/" 2`] = `
{
  "clientComponents": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs/svelte",
  "distElder": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs",
  "files": {
    "all": [],
    "client": [],
    "hooks": "",
    "publicCssFile": "",
    "routes": [],
    "server": [],
    "shortcodes": "",
  },
  "findComponent": [Function],
  "logPrefix": "[Elder.js]:",
  "production": false,
  "serverPrefix": "/testing",
  "ssrComponents": "/Users/nickreese/repos/elderjs/elderjs/t/___ELDER___/compiled",
  "status": "bootstrapping",
  "websocket": {
    "send": [Function],
    "wss": {
      "_events": {
        "connection": [Function],
      },
      "_eventsCount": 1,
      "_maxListeners": undefined,
      "_removeListeners": [Function],
      "_server": {
        "_connectionKey": "6::::0",
        "_connections": 0,
        "_events": {
          "connection": [Function],
          "error": [Function],
          "listening": [Function],
          "upgrade": [Function],
        },
        "_eventsCount": 4,
        "_handle": {
          "onconnection": [Function],
          "reading": false,
        },
        "_maxListeners": undefined,
        "_unref": false,
        "_usingWorkers": false,
        "_workers": [],
        "allowHalfOpen": true,
        "headersTimeout": 60000,
        "httpAllowHalfOpen": false,
        "insecureHTTPParser": undefined,
        "keepAliveTimeout": 5000,
        "maxHeaderSize": undefined,
        "maxHeadersCount": null,
        "pauseOnConnect": false,
        "requestTimeout": 0,
        "timeout": 0,
      },
      "_shouldEmitClose": false,
      "_state": 0,
      "clients": Set {},
      "options": {
        "WebSocket": [Function],
        "backlog": null,
        "clientTracking": true,
        "handleProtocols": null,
        "host": null,
        "maxPayload": 104857600,
        "noServer": false,
        "path": null,
        "perMessageDeflate": false,
        "port": null,
        "server": {
          "_connectionKey": "6::::0",
          "_connections": 0,
          "_events": {
            "connection": [Function],
            "error": [Function],
            "listening": [Function],
            "upgrade": [Function],
          },
          "_eventsCount": 4,
          "_handle": {
            "onconnection": [Function],
            "reading": false,
          },
          "_maxListeners": undefined,
          "_unref": false,
          "_usingWorkers": false,
          "_workers": [],
          "allowHalfOpen": true,
          "headersTimeout": 60000,
          "httpAllowHalfOpen": false,
          "insecureHTTPParser": undefined,
          "keepAliveTimeout": 5000,
          "maxHeaderSize": undefined,
          "maxHeadersCount": null,
          "pauseOnConnect": false,
          "requestTimeout": 0,
          "timeout": 0,
        },
        "skipUTF8Validation": false,
        "verifyClient": null,
      },
    },
  },
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a prefix with a trailing "/" 1`] = `
{
  "build": false,
  "context": "server",
  "debug": {
    "build": false,
    "hooks": false,
    "performance": false,
    "shortcodes": false,
    "stacks": false,
  },
  "distDir": "/Users/nickreese/repos/elderjs/elderjs/t/public",
  "hooks": {
    "disable": [],
  },
  "origin": "",
  "plugins": {},
  "prefix": "/testing",
  "rootDir": "/Users/nickreese/repos/elderjs/elderjs/t",
  "server": {
    "prefix": "/testing",
  },
  "shortcodes": {
    "closePattern": "}}",
    "openPattern": "{{",
  },
  "srcDir": "/Users/nickreese/repos/elderjs/elderjs/t/src",
  "version": "1.2.3",
  "worker": false,
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a prefix with a trailing "/" 2`] = `
{
  "clientComponents": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs/svelte",
  "distElder": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs",
  "files": {
    "all": [],
    "client": [],
    "hooks": "",
    "publicCssFile": "",
    "routes": [],
    "server": [],
    "shortcodes": "",
  },
  "findComponent": [Function],
  "logPrefix": "[Elder.js]:",
  "production": false,
  "serverPrefix": "/testing",
  "ssrComponents": "/Users/nickreese/repos/elderjs/elderjs/t/___ELDER___/compiled",
  "status": "bootstrapping",
  "websocket": {
    "send": [Function],
    "wss": {
      "_events": {
        "connection": [Function],
      },
      "_eventsCount": 1,
      "_maxListeners": undefined,
      "_removeListeners": [Function],
      "_server": {
        "_connectionKey": "6::::0",
        "_connections": 0,
        "_events": {
          "connection": [Function],
          "error": [Function],
          "listening": [Function],
          "upgrade": [Function],
        },
        "_eventsCount": 4,
        "_handle": {
          "onconnection": [Function],
          "reading": false,
        },
        "_maxListeners": undefined,
        "_unref": false,
        "_usingWorkers": false,
        "_workers": [],
        "allowHalfOpen": true,
        "headersTimeout": 60000,
        "httpAllowHalfOpen": false,
        "insecureHTTPParser": undefined,
        "keepAliveTimeout": 5000,
        "maxHeaderSize": undefined,
        "maxHeadersCount": null,
        "pauseOnConnect": false,
        "requestTimeout": 0,
        "timeout": 0,
      },
      "_shouldEmitClose": false,
      "_state": 0,
      "clients": Set {},
      "options": {
        "WebSocket": [Function],
        "backlog": null,
        "clientTracking": true,
        "handleProtocols": null,
        "host": null,
        "maxPayload": 104857600,
        "noServer": false,
        "path": null,
        "perMessageDeflate": false,
        "port": null,
        "server": {
          "_connectionKey": "6::::0",
          "_connections": 0,
          "_events": {
            "connection": [Function],
            "error": [Function],
            "listening": [Function],
            "upgrade": [Function],
          },
          "_eventsCount": 4,
          "_handle": {
            "onconnection": [Function],
            "reading": false,
          },
          "_maxListeners": undefined,
          "_unref": false,
          "_usingWorkers": false,
          "_workers": [],
          "allowHalfOpen": true,
          "headersTimeout": 60000,
          "httpAllowHalfOpen": false,
          "insecureHTTPParser": undefined,
          "keepAliveTimeout": 5000,
          "maxHeaderSize": undefined,
          "maxHeadersCount": null,
          "pauseOnConnect": false,
          "requestTimeout": 0,
          "timeout": 0,
        },
        "skipUTF8Validation": false,
        "verifyClient": null,
      },
    },
  },
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a prefix without a leading or trailing "/" 1`] = `
{
  "build": false,
  "context": "server",
  "debug": {
    "build": false,
    "hooks": false,
    "performance": false,
    "shortcodes": false,
    "stacks": false,
  },
  "distDir": "/Users/nickreese/repos/elderjs/elderjs/t/public",
  "hooks": {
    "disable": [],
  },
  "origin": "",
  "plugins": {},
  "prefix": "/testing",
  "rootDir": "/Users/nickreese/repos/elderjs/elderjs/t",
  "server": {
    "prefix": "/testing",
  },
  "shortcodes": {
    "closePattern": "}}",
    "openPattern": "{{",
  },
  "srcDir": "/Users/nickreese/repos/elderjs/elderjs/t/src",
  "version": "1.2.3",
  "worker": false,
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a prefix without a leading or trailing "/" 2`] = `
{
  "clientComponents": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs/svelte",
  "distElder": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs",
  "files": {
    "all": [],
    "client": [],
    "hooks": "",
    "publicCssFile": "",
    "routes": [],
    "server": [],
    "shortcodes": "",
  },
  "findComponent": [Function],
  "logPrefix": "[Elder.js]:",
  "production": false,
  "serverPrefix": "/testing",
  "ssrComponents": "/Users/nickreese/repos/elderjs/elderjs/t/___ELDER___/compiled",
  "status": "bootstrapping",
  "websocket": {
    "send": [Function],
    "wss": {
      "_events": {
        "connection": [Function],
      },
      "_eventsCount": 1,
      "_maxListeners": undefined,
      "_removeListeners": [Function],
      "_server": {
        "_connectionKey": "6::::0",
        "_connections": 0,
        "_events": {
          "connection": [Function],
          "error": [Function],
          "listening": [Function],
          "upgrade": [Function],
        },
        "_eventsCount": 4,
        "_handle": {
          "onconnection": [Function],
          "reading": false,
        },
        "_maxListeners": undefined,
        "_unref": false,
        "_usingWorkers": false,
        "_workers": [],
        "allowHalfOpen": true,
        "headersTimeout": 60000,
        "httpAllowHalfOpen": false,
        "insecureHTTPParser": undefined,
        "keepAliveTimeout": 5000,
        "maxHeaderSize": undefined,
        "maxHeadersCount": null,
        "pauseOnConnect": false,
        "requestTimeout": 0,
        "timeout": 0,
      },
      "_shouldEmitClose": false,
      "_state": 0,
      "clients": Set {},
      "options": {
        "WebSocket": [Function],
        "backlog": null,
        "clientTracking": true,
        "handleProtocols": null,
        "host": null,
        "maxPayload": 104857600,
        "noServer": false,
        "path": null,
        "perMessageDeflate": false,
        "port": null,
        "server": {
          "_connectionKey": "6::::0",
          "_connections": 0,
          "_events": {
            "connection": [Function],
            "error": [Function],
            "listening": [Function],
            "upgrade": [Function],
          },
          "_eventsCount": 4,
          "_handle": {
            "onconnection": [Function],
            "reading": false,
          },
          "_maxListeners": undefined,
          "_unref": false,
          "_usingWorkers": false,
          "_workers": [],
          "allowHalfOpen": true,
          "headersTimeout": 60000,
          "httpAllowHalfOpen": false,
          "insecureHTTPParser": undefined,
          "keepAliveTimeout": 5000,
          "maxHeaderSize": undefined,
          "maxHeadersCount": null,
          "pauseOnConnect": false,
          "requestTimeout": 0,
          "timeout": 0,
        },
        "skipUTF8Validation": false,
        "verifyClient": null,
      },
    },
  },
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a server.prefix with a leading "/" 1`] = `
{
  "build": false,
  "context": "server",
  "debug": {
    "build": false,
    "hooks": false,
    "performance": false,
    "shortcodes": false,
    "stacks": false,
  },
  "distDir": "/Users/nickreese/repos/elderjs/elderjs/t/public",
  "hooks": {
    "disable": [],
  },
  "origin": "",
  "plugins": {},
  "prefix": "/testing",
  "rootDir": "/Users/nickreese/repos/elderjs/elderjs/t",
  "server": {
    "prefix": "/testing",
  },
  "shortcodes": {
    "closePattern": "}}",
    "openPattern": "{{",
  },
  "srcDir": "/Users/nickreese/repos/elderjs/elderjs/t/src",
  "version": "1.2.3",
  "worker": false,
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a server.prefix with a leading "/" 2`] = `
{
  "clientComponents": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs/svelte",
  "distElder": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs",
  "files": {
    "all": [],
    "client": [],
    "hooks": "",
    "publicCssFile": "",
    "routes": [],
    "server": [],
    "shortcodes": "",
  },
  "findComponent": [Function],
  "logPrefix": "[Elder.js]:",
  "production": false,
  "serverPrefix": "/testing",
  "ssrComponents": "/Users/nickreese/repos/elderjs/elderjs/t/___ELDER___/compiled",
  "status": "bootstrapping",
  "websocket": {
    "send": [Function],
    "wss": {
      "_events": {
        "connection": [Function],
      },
      "_eventsCount": 1,
      "_maxListeners": undefined,
      "_removeListeners": [Function],
      "_server": {
        "_connectionKey": "6::::0",
        "_connections": 0,
        "_events": {
          "connection": [Function],
          "error": [Function],
          "listening": [Function],
          "upgrade": [Function],
        },
        "_eventsCount": 4,
        "_handle": {
          "onconnection": [Function],
          "reading": false,
        },
        "_maxListeners": undefined,
        "_unref": false,
        "_usingWorkers": false,
        "_workers": [],
        "allowHalfOpen": true,
        "headersTimeout": 60000,
        "httpAllowHalfOpen": false,
        "insecureHTTPParser": undefined,
        "keepAliveTimeout": 5000,
        "maxHeaderSize": undefined,
        "maxHeadersCount": null,
        "pauseOnConnect": false,
        "requestTimeout": 0,
        "timeout": 0,
      },
      "_shouldEmitClose": false,
      "_state": 0,
      "clients": Set {},
      "options": {
        "WebSocket": [Function],
        "backlog": null,
        "clientTracking": true,
        "handleProtocols": null,
        "host": null,
        "maxPayload": 104857600,
        "noServer": false,
        "path": null,
        "perMessageDeflate": false,
        "port": null,
        "server": {
          "_connectionKey": "6::::0",
          "_connections": 0,
          "_events": {
            "connection": [Function],
            "error": [Function],
            "listening": [Function],
            "upgrade": [Function],
          },
          "_eventsCount": 4,
          "_handle": {
            "onconnection": [Function],
            "reading": false,
          },
          "_maxListeners": undefined,
          "_unref": false,
          "_usingWorkers": false,
          "_workers": [],
          "allowHalfOpen": true,
          "headersTimeout": 60000,
          "httpAllowHalfOpen": false,
          "insecureHTTPParser": undefined,
          "keepAliveTimeout": 5000,
          "maxHeaderSize": undefined,
          "maxHeadersCount": null,
          "pauseOnConnect": false,
          "requestTimeout": 0,
          "timeout": 0,
        },
        "skipUTF8Validation": false,
        "verifyClient": null,
      },
    },
  },
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a server.prefix with a leading and trailing "/" 1`] = `
{
  "build": false,
  "context": "server",
  "debug": {
    "build": false,
    "hooks": false,
    "performance": false,
    "shortcodes": false,
    "stacks": false,
  },
  "distDir": "/Users/nickreese/repos/elderjs/elderjs/t/public",
  "hooks": {
    "disable": [],
  },
  "origin": "",
  "plugins": {},
  "prefix": "/testing",
  "rootDir": "/Users/nickreese/repos/elderjs/elderjs/t",
  "server": {
    "prefix": "/testing",
  },
  "shortcodes": {
    "closePattern": "}}",
    "openPattern": "{{",
  },
  "srcDir": "/Users/nickreese/repos/elderjs/elderjs/t/src",
  "version": "1.2.3",
  "worker": false,
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a server.prefix with a leading and trailing "/" 2`] = `
{
  "clientComponents": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs/svelte",
  "distElder": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs",
  "files": {
    "all": [],
    "client": [],
    "hooks": "",
    "publicCssFile": "",
    "routes": [],
    "server": [],
    "shortcodes": "",
  },
  "findComponent": [Function],
  "logPrefix": "[Elder.js]:",
  "production": false,
  "serverPrefix": "/testing",
  "ssrComponents": "/Users/nickreese/repos/elderjs/elderjs/t/___ELDER___/compiled",
  "status": "bootstrapping",
  "websocket": {
    "send": [Function],
    "wss": {
      "_events": {
        "connection": [Function],
      },
      "_eventsCount": 1,
      "_maxListeners": undefined,
      "_removeListeners": [Function],
      "_server": {
        "_connectionKey": "6::::0",
        "_connections": 0,
        "_events": {
          "connection": [Function],
          "error": [Function],
          "listening": [Function],
          "upgrade": [Function],
        },
        "_eventsCount": 4,
        "_handle": {
          "onconnection": [Function],
          "reading": false,
        },
        "_maxListeners": undefined,
        "_unref": false,
        "_usingWorkers": false,
        "_workers": [],
        "allowHalfOpen": true,
        "headersTimeout": 60000,
        "httpAllowHalfOpen": false,
        "insecureHTTPParser": undefined,
        "keepAliveTimeout": 5000,
        "maxHeaderSize": undefined,
        "maxHeadersCount": null,
        "pauseOnConnect": false,
        "requestTimeout": 0,
        "timeout": 0,
      },
      "_shouldEmitClose": false,
      "_state": 0,
      "clients": Set {},
      "options": {
        "WebSocket": [Function],
        "backlog": null,
        "clientTracking": true,
        "handleProtocols": null,
        "host": null,
        "maxPayload": 104857600,
        "noServer": false,
        "path": null,
        "perMessageDeflate": false,
        "port": null,
        "server": {
          "_connectionKey": "6::::0",
          "_connections": 0,
          "_events": {
            "connection": [Function],
            "error": [Function],
            "listening": [Function],
            "upgrade": [Function],
          },
          "_eventsCount": 4,
          "_handle": {
            "onconnection": [Function],
            "reading": false,
          },
          "_maxListeners": undefined,
          "_unref": false,
          "_usingWorkers": false,
          "_workers": [],
          "allowHalfOpen": true,
          "headersTimeout": 60000,
          "httpAllowHalfOpen": false,
          "insecureHTTPParser": undefined,
          "keepAliveTimeout": 5000,
          "maxHeaderSize": undefined,
          "maxHeadersCount": null,
          "pauseOnConnect": false,
          "requestTimeout": 0,
          "timeout": 0,
        },
        "skipUTF8Validation": false,
        "verifyClient": null,
      },
    },
  },
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a server.prefix with a trailing "/" 1`] = `
{
  "build": false,
  "context": "server",
  "debug": {
    "build": false,
    "hooks": false,
    "performance": false,
    "shortcodes": false,
    "stacks": false,
  },
  "distDir": "/Users/nickreese/repos/elderjs/elderjs/t/public",
  "hooks": {
    "disable": [],
  },
  "origin": "",
  "plugins": {},
  "prefix": "/testing",
  "rootDir": "/Users/nickreese/repos/elderjs/elderjs/t",
  "server": {
    "prefix": "/testing",
  },
  "shortcodes": {
    "closePattern": "}}",
    "openPattern": "{{",
  },
  "srcDir": "/Users/nickreese/repos/elderjs/elderjs/t/src",
  "version": "1.2.3",
  "worker": false,
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a server.prefix with a trailing "/" 2`] = `
{
  "clientComponents": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs/svelte",
  "distElder": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs",
  "files": {
    "all": [],
    "client": [],
    "hooks": "",
    "publicCssFile": "",
    "routes": [],
    "server": [],
    "shortcodes": "",
  },
  "findComponent": [Function],
  "logPrefix": "[Elder.js]:",
  "production": false,
  "serverPrefix": "/testing",
  "ssrComponents": "/Users/nickreese/repos/elderjs/elderjs/t/___ELDER___/compiled",
  "status": "bootstrapping",
  "websocket": {
    "send": [Function],
    "wss": {
      "_events": {
        "connection": [Function],
      },
      "_eventsCount": 1,
      "_maxListeners": undefined,
      "_removeListeners": [Function],
      "_server": {
        "_connectionKey": "6::::0",
        "_connections": 0,
        "_events": {
          "connection": [Function],
          "error": [Function],
          "listening": [Function],
          "upgrade": [Function],
        },
        "_eventsCount": 4,
        "_handle": {
          "onconnection": [Function],
          "reading": false,
        },
        "_maxListeners": undefined,
        "_unref": false,
        "_usingWorkers": false,
        "_workers": [],
        "allowHalfOpen": true,
        "headersTimeout": 60000,
        "httpAllowHalfOpen": false,
        "insecureHTTPParser": undefined,
        "keepAliveTimeout": 5000,
        "maxHeaderSize": undefined,
        "maxHeadersCount": null,
        "pauseOnConnect": false,
        "requestTimeout": 0,
        "timeout": 0,
      },
      "_shouldEmitClose": false,
      "_state": 0,
      "clients": Set {},
      "options": {
        "WebSocket": [Function],
        "backlog": null,
        "clientTracking": true,
        "handleProtocols": null,
        "host": null,
        "maxPayload": 104857600,
        "noServer": false,
        "path": null,
        "perMessageDeflate": false,
        "port": null,
        "server": {
          "_connectionKey": "6::::0",
          "_connections": 0,
          "_events": {
            "connection": [Function],
            "error": [Function],
            "listening": [Function],
            "upgrade": [Function],
          },
          "_eventsCount": 4,
          "_handle": {
            "onconnection": [Function],
            "reading": false,
          },
          "_maxListeners": undefined,
          "_unref": false,
          "_usingWorkers": false,
          "_workers": [],
          "allowHalfOpen": true,
          "headersTimeout": 60000,
          "httpAllowHalfOpen": false,
          "insecureHTTPParser": undefined,
          "keepAliveTimeout": 5000,
          "maxHeaderSize": undefined,
          "maxHeadersCount": null,
          "pauseOnConnect": false,
          "requestTimeout": 0,
          "timeout": 0,
        },
        "skipUTF8Validation": false,
        "verifyClient": null,
      },
    },
  },
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a server.prefix without leading or trailing "/" 1`] = `
{
  "build": false,
  "context": "server",
  "debug": {
    "build": false,
    "hooks": false,
    "performance": false,
    "shortcodes": false,
    "stacks": false,
  },
  "distDir": "/Users/nickreese/repos/elderjs/elderjs/t/public",
  "hooks": {
    "disable": [],
  },
  "origin": "",
  "plugins": {},
  "prefix": "/testing",
  "rootDir": "/Users/nickreese/repos/elderjs/elderjs/t",
  "server": {
    "prefix": "/testing",
  },
  "shortcodes": {
    "closePattern": "}}",
    "openPattern": "{{",
  },
  "srcDir": "/Users/nickreese/repos/elderjs/elderjs/t/src",
  "version": "1.2.3",
  "worker": false,
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server with a server.prefix without leading or trailing "/" 2`] = `
{
  "clientComponents": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs/svelte",
  "distElder": "/Users/nickreese/repos/elderjs/elderjs/t/public/testing/_elderjs",
  "files": {
    "all": [],
    "client": [],
    "hooks": "",
    "publicCssFile": "",
    "routes": [],
    "server": [],
    "shortcodes": "",
  },
  "findComponent": [Function],
  "logPrefix": "[Elder.js]:",
  "production": false,
  "serverPrefix": "/testing",
  "ssrComponents": "/Users/nickreese/repos/elderjs/elderjs/t/___ELDER___/compiled",
  "status": "bootstrapping",
  "websocket": {
    "send": [Function],
    "wss": {
      "_events": {
        "connection": [Function],
      },
      "_eventsCount": 1,
      "_maxListeners": undefined,
      "_removeListeners": [Function],
      "_server": {
        "_connectionKey": "6::::0",
        "_connections": 0,
        "_events": {
          "connection": [Function],
          "error": [Function],
          "listening": [Function],
          "upgrade": [Function],
        },
        "_eventsCount": 4,
        "_handle": {
          "onconnection": [Function],
          "reading": false,
        },
        "_maxListeners": undefined,
        "_unref": false,
        "_usingWorkers": false,
        "_workers": [],
        "allowHalfOpen": true,
        "headersTimeout": 60000,
        "httpAllowHalfOpen": false,
        "insecureHTTPParser": undefined,
        "keepAliveTimeout": 5000,
        "maxHeaderSize": undefined,
        "maxHeadersCount": null,
        "pauseOnConnect": false,
        "requestTimeout": 0,
        "timeout": 0,
      },
      "_shouldEmitClose": false,
      "_state": 0,
      "clients": Set {},
      "options": {
        "WebSocket": [Function],
        "backlog": null,
        "clientTracking": true,
        "handleProtocols": null,
        "host": null,
        "maxPayload": 104857600,
        "noServer": false,
        "path": null,
        "perMessageDeflate": false,
        "port": null,
        "server": {
          "_connectionKey": "6::::0",
          "_connections": 0,
          "_events": {
            "connection": [Function],
            "error": [Function],
            "listening": [Function],
            "upgrade": [Function],
          },
          "_eventsCount": 4,
          "_handle": {
            "onconnection": [Function],
            "reading": false,
          },
          "_maxListeners": undefined,
          "_unref": false,
          "_usingWorkers": false,
          "_workers": [],
          "allowHalfOpen": true,
          "headersTimeout": 60000,
          "httpAllowHalfOpen": false,
          "insecureHTTPParser": undefined,
          "keepAliveTimeout": 5000,
          "maxHeaderSize": undefined,
          "maxHeadersCount": null,
          "pauseOnConnect": false,
          "requestTimeout": 0,
          "timeout": 0,
        },
        "skipUTF8Validation": false,
        "verifyClient": null,
      },
    },
  },
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server without a prefix 1`] = `
{
  "build": false,
  "context": "server",
  "debug": {
    "build": false,
    "hooks": false,
    "performance": false,
    "shortcodes": false,
    "stacks": false,
  },
  "distDir": "/Users/nickreese/repos/elderjs/elderjs/t/public",
  "hooks": {
    "disable": [],
  },
  "origin": "",
  "plugins": {},
  "prefix": "",
  "rootDir": "/Users/nickreese/repos/elderjs/elderjs/t",
  "server": {
    "prefix": "",
  },
  "shortcodes": {
    "closePattern": "}}",
    "openPattern": "{{",
  },
  "srcDir": "/Users/nickreese/repos/elderjs/elderjs/t/src",
  "version": "1.2.3",
  "worker": false,
}
`;

exports[`#getConfig > it accepts custom initalization options > sets a server without a prefix 2`] = `
{
  "clientComponents": "/Users/nickreese/repos/elderjs/elderjs/t/public/_elderjs/svelte",
  "distElder": "/Users/nickreese/repos/elderjs/elderjs/t/public/_elderjs",
  "files": {
    "all": [],
    "client": [],
    "hooks": "",
    "publicCssFile": "",
    "routes": [],
    "server": [],
    "shortcodes": "",
  },
  "findComponent": [Function],
  "logPrefix": "[Elder.js]:",
  "production": false,
  "serverPrefix": "",
  "ssrComponents": "/Users/nickreese/repos/elderjs/elderjs/t/___ELDER___/compiled",
  "status": "bootstrapping",
  "websocket": {
    "send": [Function],
    "wss": {
      "_events": {
        "connection": [Function],
      },
      "_eventsCount": 1,
      "_maxListeners": undefined,
      "_removeListeners": [Function],
      "_server": {
        "_connectionKey": "6::::0",
        "_connections": 0,
        "_events": {
          "connection": [Function],
          "error": [Function],
          "listening": [Function],
          "upgrade": [Function],
        },
        "_eventsCount": 4,
        "_handle": {
          "onconnection": [Function],
          "reading": false,
        },
        "_maxListeners": undefined,
        "_unref": false,
        "_usingWorkers": false,
        "_workers": [],
        "allowHalfOpen": true,
        "headersTimeout": 60000,
        "httpAllowHalfOpen": false,
        "insecureHTTPParser": undefined,
        "keepAliveTimeout": 5000,
        "maxHeaderSize": undefined,
        "maxHeadersCount": null,
        "pauseOnConnect": false,
        "requestTimeout": 0,
        "timeout": 0,
      },
      "_shouldEmitClose": false,
      "_state": 0,
      "clients": Set {},
      "options": {
        "WebSocket": [Function],
        "backlog": null,
        "clientTracking": true,
        "handleProtocols": null,
        "host": null,
        "maxPayload": 104857600,
        "noServer": false,
        "path": null,
        "perMessageDeflate": false,
        "port": null,
        "server": {
          "_connectionKey": "6::::0",
          "_connections": 0,
          "_events": {
            "connection": [Function],
            "error": [Function],
            "listening": [Function],
            "upgrade": [Function],
          },
          "_eventsCount": 4,
          "_handle": {
            "onconnection": [Function],
            "reading": false,
          },
          "_maxListeners": undefined,
          "_unref": false,
          "_usingWorkers": false,
          "_workers": [],
          "allowHalfOpen": true,
          "headersTimeout": 60000,
          "httpAllowHalfOpen": false,
          "insecureHTTPParser": undefined,
          "keepAliveTimeout": 5000,
          "maxHeaderSize": undefined,
          "maxHeadersCount": null,
          "pauseOnConnect": false,
          "requestTimeout": 0,
          "timeout": 0,
        },
        "skipUTF8Validation": false,
        "verifyClient": null,
      },
    },
  },
}
`;

exports[`#getConfig > it accepts custom initalization options > sets build with default 1`] = `
{
  "build": {
    "numberOfWorkers": -1,
    "shuffleRequests": false,
  },
  "context": "build",
  "debug": {
    "build": false,
    "hooks": false,
    "performance": false,
    "shortcodes": false,
    "stacks": false,
  },
  "distDir": "/Users/nickreese/repos/elderjs/elderjs/t/public",
  "hooks": {
    "disable": [],
  },
  "origin": "",
  "plugins": {},
  "prefix": "",
  "rootDir": "/Users/nickreese/repos/elderjs/elderjs/t",
  "server": false,
  "shortcodes": {
    "closePattern": "}}",
    "openPattern": "{{",
  },
  "srcDir": "/Users/nickreese/repos/elderjs/elderjs/t/src",
  "version": "1.2.3",
  "worker": false,
}
`;

exports[`#getConfig > it accepts custom initalization options > sets build with default 2`] = `
{
  "clientComponents": "/Users/nickreese/repos/elderjs/elderjs/t/public/_elderjs/svelte",
  "distElder": "/Users/nickreese/repos/elderjs/elderjs/t/public/_elderjs",
  "files": {
    "all": [],
    "client": [],
    "hooks": "",
    "publicCssFile": "",
    "routes": [],
    "server": [],
    "shortcodes": "",
  },
  "findComponent": [Function],
  "logPrefix": "[Elder.js]:",
  "production": false,
  "serverPrefix": "",
  "ssrComponents": "/Users/nickreese/repos/elderjs/elderjs/t/___ELDER___/compiled",
  "status": "bootstrapping",
  "websocket": undefined,
}
`;
